# Athenz ZTS Servlet properties file. The only two supported
# environment variables are ${ROOT} and ${USER} which will be
# replaced by their corresponding environment variable values
# If there is a value specified in the commented property line,
# then it indicates the default value

# Comma separated list of authority implementation classes to support
# authenticating principals in ZTS
athenz.zts.authority_classes=com.yahoo.athenz.auth.impl.PrincipalAuthority

# If File Private Key store implementation is used in the Server,
# this setting specifies the path to the PEM encoded ZTS Server
# private key file (both RSA and EC privates keys are supported)
athenz.auth.private_key_store.private_key=${ROOT}/var/zts_server/keys/zts_private.pem

# If File Private Key store implementation is used in the Server,
# this setting specifies the key identifier for the private key
# configured by the athenz.auth.private_key_store.private_key
# property
athenz.auth.private_key_store.private_key_id=0

# Key Manager password
#athenz.zts.ssl_key_manager_password=

# The path to the keystore file that contains the client's private key
# and certificate. Currently this is only used by the HttpCertSigner
# class implementation.
athenz.zts.ssl_key_store=file://${ROOT}/var/zts_server/certs/zts_keystore.pkcs12

# Specifies the type for the keystore specified in the
# athenz.zts.ssl_key_store property
athenz.zts.ssl_key_store_type=PKCS12

# Password for the keystore specified in the athenz.zts.ssl_key_store property
athenz.zts.ssl_key_store_password=athenz

# The path to the trust store file that contains CA certificates
# trusted by the http client running within this ZTS instance
athenz.zts.ssl_trust_store=${ROOT}/var/zts_server/certs/zts_truststore.jks
javax.net.ssl.trustStore=${ROOT}/var/zts_server/certs/zts_truststore.jks

# Type for the truststore specified in the athenz.zts.ssl_trust_store property
athenz.ssl_trust_store_type=JKS
javax.net.ssl.trustStoreType=JKS

# Password for the truststore specified in the athenz.zts.ssl_trust_store property
athenz.ssl_trust_store_password=athenz
javax.net.ssl.trustStorePassword=athenz

# Specifies the location for the athenz.conf file used by the ZMS Client
# library to determine what ZMS server to contact to.
athenz.athenz_conf=${ROOT}/conf/zts_server/athenz.conf

# If specified, this setting overrides the ZMS Server url value for the
# ZMS Client as retrieved from the athenz.conf file
#athenz.zts.zms_url=

# SelfCertSignerFactory implementation - if this factory class is used
# is used for the CertSigner implementation (athenz.zts.cert_signer_factory_class
# property), this setting specifies the private key filename that is used to sign
# certificate requests.
athenz.zts.self_signer_private_key_fname=${ROOT}/var/zts_server/keys/zts_private.pem

# SelfCertSignerFactory implementation - if this factory class is used
# is used for the CertSigner implementation (athenz.zts.cert_signer_factory_class
# property), this setting specifies the private key password that is used to sign
# certificate requests.
#athenz.zts.self_signer_private_key_password=

# SelfCertSignerFactory implementation - if this factory class is used
# is used for the CertSigner implementation (athenz.zts.cert_signer_factory_class
# property), this setting specifies the dn for the CA certificate that ZTS
# will use
#athenz.zts.self_signer_cert_dn=cn=Self Signed Athenz CA,o=Athenz,c=US

# HttpCertSignerFactory implementation - if this factory class is used
# for the for the CertSigner implementation (athenz.zts.cert_signer_factory_class
# property), this setting specifies the base uri for the Certificate Signer Service
#athenz.zts.certsign_base_uri=

# Specifies the factory class that implements the Metrics interface
# used by the ZTS Server to report stats
#athenz.zts.metric_factory_class=com.yahoo.athenz.common.metrics.impl.NoOpMetricFactory

# Specifies the factory class that implements the AuditLoggerFactory
# interface used by the ZTS Server to log all changes to domain
# data for auditing purposes
#athenz.zts.audit_logger_factory_class=com.yahoo.athenz.common.server.log.impl.DefaultAuditLoggerFactory

# Specifies the factory class that implements the PrivateKeyStoreFactory
# interface used by the ZTS Server to get access to its host specific
# private key
#athenz.zts.private_key_store_factory_class=com.yahoo.athenz.auth.impl.FilePrivateKeyStoreFactory

# Specifies the factory class that implements CertSignerFactory
# interface used by the ZTS Server to sign any certificate requests
athenz.zts.cert_signer_factory_class=com.yahoo.athenz.zts.cert.impl.SelfCertSignerFactory

# Specifies the factory class that implements ChangeLogStoreFactory
# interface used by the ZTS Server to retrieve the latest changes
# from the ZMS Server and save them locally
#athenz.zts.change_log_store_factory_class=com.yahoo.athenz.zts.store.file.ZMSFileChangeLogStoreFactory

# Specifies the directory for storing zms domain json documents when
# ZMSFileChangeLogStoreFactory is configured for the change log factory
# class (athenz.zts.data_change_log_store_factory_class property)
#athenz.zts.change_log_store_dir=${ROOT}/var/zts_server

# Boolean setting to force users to request role tokens for specific
# roles rather than for domain which will includes all the roles the
# given principal has access in that domain
#athenz.zts.least_privilege_principle=false

# Specifies the maximum expiry timeout that a client can ask for when
# requesting a role token. If the client asks for a longer timeout, the
# server will automatically replace the value with this one
#athenz.zts.role_token_max_timeout=2592000

# Specifies the default expiry timeout for role tokens when the client
# does not specify any timeout parameters
#athenz.zts.role_token_default_timeout=7200

# Specifies the expiry timeout for signed policy documents that
# ZTS Server signs and returns to ZPU clients
#athenz.zts.signed_policy_timeout=604800

# Comma separated list of authorized proxy principals
#athenz.zts.authorized_proxy_users=

# Specifies the service name that the ostk instance documents are
# signed with.
#athenz.zts.ostk_host_signer_service=

# If the ZTS servlet is deployed along other servlets that may
# run on non-TLS ports, this setting forces that requests to
# ZTS are only accepted on secure TLS ports.
#athenz.zts.secure_requests_only=true
