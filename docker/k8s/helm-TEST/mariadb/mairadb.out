NAME: mariadb_test
LAST DEPLOYED: Wed Apr  8 14:57:26 2020
NAMESPACE: kube-system
STATUS: pending-install
REVISION: 1
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
db:
  forcePassword: false
  injectSecretsAsVolume: false
  name: my_database
  password: ""
  user: ""
image:
  debug: false
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: bitnami/mariadb
  tag: 10.3.22-debian-10-r60
master:
  affinity: {}
  antiAffinity: soft
  config: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
  extraInitContainers: ""
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 120
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  nodeSelector: {}
  persistence:
    accessModes:
    - ReadWriteOnce
    annotations: {}
    enabled: true
    mountPath: /bitnami/mariadb
    size: 8Gi
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  resources: {}
  service:
    annotations: {}
  tolerations: []
  updateStrategy:
    type: RollingUpdate
metrics:
  annotations:
    prometheus.io/port: "9104"
    prometheus.io/scrape: "true"
  enabled: false
  extraArgs:
    master: []
    slave: []
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/mysqld-exporter
    tag: 0.12.1-debian-10-r58
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 120
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  resources: {}
  serviceMonitor:
    enabled: false
    selector:
      prometheus: kube-prometheus
rbac:
  create: false
replication:
  enabled: true
  forcePassword: false
  injectSecretsAsVolume: false
  password: ""
  user: replicator
rootUser:
  forcePassword: false
  injectSecretsAsVolume: false
  password: ""
securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
service:
  port: 3306
  type: ClusterIP
serviceAccount:
  create: false
slave:
  affinity: {}
  antiAffinity: soft
  config: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
  extraInitContainers: ""
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 120
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  nodeSelector: {}
  persistence:
    accessModes:
    - ReadWriteOnce
    annotations: null
    enabled: true
    size: 8Gi
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 45
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  replicas: 1
  resources: {}
  service:
    annotations: {}
  tolerations: []
  updateStrategy:
    type: RollingUpdate
tests:
  enabled: true
  testFramework:
    image:
      registry: docker.io
      repository: dduportal/bats
      tag: 0.4.0
volumePermissions:
  enabled: false
  image:
    pullPolicy: Always
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
  resources: {}

HOOKS:
---
# Source: mariadb/templates/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mariadb_test-test-mzez9"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: docker.io/dduportal/bats:0.4.0
      command:
        - "bash"
        - "-c"
        - |
          set -ex
          # copy bats to tools dir
          cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: mariadb-test
      image: docker.io/bitnami/mariadb:10.3.22-debian-10-r60
      imagePullPolicy: "IfNotPresent"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb_test
              key: mariadb-root-password
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: mariadb_test-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
MANIFEST:
---
# Source: mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mariadb_test
  labels:
    app: "mariadb"
    chart: "mariadb-7.3.16"
    release: "mariadb_test"
    heritage: "Helm"
type: Opaque
data:
  mariadb-root-password: "Rzd6NkY4Qkltdg=="
  
  mariadb-replication-password: "ZWZHS0hrR3Y0Qg=="
---
# Source: mariadb/templates/master-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb_test-master
  labels:
    app: "mariadb"
    component: "master"
    chart: "mariadb-7.3.16"
    release: "mariadb_test"
    heritage: "Helm"
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: mariadb/templates/slave-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb_test-slave
  labels:
    app: "mariadb"
    component: "slave"
    chart: "mariadb-7.3.16"
    release: "mariadb_test"
    heritage: "Helm"
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: mariadb/templates/tests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb_test-tests
data:
  run.sh: |-
    @test "Testing MariaDB is accessible" {
      mysql -h mariadb_test -uroot -p$MARIADB_ROOT_PASSWORD -e 'show databases;'
    }
---
# Source: mariadb/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mariadb_test
  labels:
    app: "mariadb"
    component: "master"
    chart: "mariadb-7.3.16"
    release: "mariadb_test"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: "mariadb"
    component: "master"
    release: "mariadb_test"
---
# Source: mariadb/templates/slave-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mariadb_test-slave
  labels:
    app: "mariadb"
    chart: "mariadb-7.3.16"
    component: "slave"
    release: "mariadb_test"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: "mariadb"
    component: "slave"
    release: "mariadb_test"
---
# Source: mariadb/templates/master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb_test-master
  labels:
    app: mariadb
    chart: mariadb-7.3.16
    release: mariadb_test
    heritage: Helm
    component: master
spec:
  selector:
    matchLabels:
      app: mariadb
      release: mariadb_test
      component: master
  serviceName: mariadb_test-master
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mariadb
        chart: mariadb-7.3.16
        release: mariadb_test
        component: master
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: mariadb
                    release: mariadb_test      
      initContainers:
      containers:
        - name: "mariadb"
          image: docker.io/bitnami/mariadb:10.3.22-debian-10-r60
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb_test
                  key: mariadb-root-password
            - name: MARIADB_DATABASE
              value: "my_database"
            - name: MARIADB_REPLICATION_MODE
              value: "master"
            - name: MARIADB_REPLICATION_USER
              value: "replicator"
            - name: MARIADB_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb_test
                  key: mariadb-replication-password
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MARIADB_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MARIADB_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mariadb_test-master
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "mariadb"
          component: "master"
          release: "mariadb_test"
          heritage: "Helm"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: mariadb/templates/slave-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb_test-slave
  labels:
    app: mariadb
    chart: mariadb-7.3.16
    release: mariadb_test
    heritage: Helm
    component: slave
spec:
  selector:
    matchLabels:
      app: mariadb
      release: mariadb_test
      component: slave
  serviceName: mariadb_test-slave
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mariadb
        chart: mariadb-7.3.16
        release: mariadb_test
        component: slave
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: mariadb
                    release: mariadb_test      
      initContainers:
      containers:
        - name: "mariadb"
          image: docker.io/bitnami/mariadb:10.3.22-debian-10-r60
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MARIADB_REPLICATION_MODE
              value: "slave"
            - name: MARIADB_MASTER_HOST
              value: mariadb_test
            - name: MARIADB_MASTER_PORT_NUMBER
              value: "3306"
            - name: MARIADB_MASTER_ROOT_USER
              value: "root"
            - name: MARIADB_MASTER_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb_test
                  key: mariadb-root-password
            - name: MARIADB_REPLICATION_USER
              value: "replicator"
            - name: MARIADB_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb_test
                  key: mariadb-replication-password
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  password_aux="${MARIADB_MASTER_ROOT_PASSWORD:-}"
                  if [ -f "${MARIADB_MASTER_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MARIADB_MASTER_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  password_aux="${MARIADB_MASTER_ROOT_PASSWORD:-}"
                  if [ -f "${MARIADB_MASTER_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MARIADB_MASTER_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mariadb_test-slave
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "mariadb"
          component: "slave"
          release: "mariadb_test"
          heritage: "Helm"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
NOTES:
Please be patient while the chart is being deployed

Tip:

  Watch the deployment status using the command: kubectl get pods -w --namespace default -l release=mariadb-test

Services:

  echo Master: mariadb-test.default.svc.cluster.local:3306
  echo Slave:  mariadb-test-slave.default.svc.cluster.local:3306

Administrator credentials:

  Username: root
  Password : $(kubectl get secret --namespace default mariadb-test -o jsonpath="{.data.mariadb-root-password}" | base64 --decode)

To connect to your database:

  1. Run a pod that you can use as a client:

      kubectl run mariadb-test-client --rm --tty -i --restart='Never' --image  docker.io/bitnami/mariadb:10.3.22-debian-10-r60 --namespace default --command -- bash

  2. To connect to master service (read/write):

      mysql -h mariadb-test.default.svc.cluster.local -uroot -p my_database

  3. To connect to slave service (read-only):

      mysql -h mariadb-test-slave.default.svc.cluster.local -uroot -p my_database

To upgrade this helm chart:

  1. Obtain the password as described on the 'Administrator credentials' section and set the 'rootUser.password' parameter as shown below:

      ROOT_PASSWORD=$(kubectl get secret --namespace default mariadb-test -o jsonpath="{.data.mariadb-root-password}" | base64 --decode)
      helm upgrade mariadb-test bitnami/mariadb --set rootUser.password=$ROOT_PASSWORD
